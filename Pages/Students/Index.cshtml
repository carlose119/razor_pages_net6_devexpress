@page
@model razor_pages_net6.Pages.Student.IndexModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewData["Title"] = "Studen page";
}

<div class="text-center">
    <h1 class="display-4">Students</h1>
</div>

@* @foreach (var item in Model.ListStudents)
{
    <h2 class="card-title">@item.LastName</h2>
} *@

@(Html.DevExtreme().DataGrid()
    .ID("gridContainer")
    .ShowBorders(true)
    .DataSource(Model.ListStudents)
    .KeyExpr("ID")
    .Columns(c => {
        c.Add().DataField("ID");
        c.Add().DataField("LastName");
        c.Add().DataField("FirstMidName");
        c.Add().DataField("EnrollmentDate");
    })
)

<br/><br/><br/>

@(Html.DevExtreme().DataGrid()
    .ShowBorders(true)
    @* .DataSource(d => d.OData()
        .Version(2)
        .Url("/Students/Index?handler=ListStudents")
        .Key("ID")
    ) *@
    .DataSource(ds => ds.StaticJson()
        .Url(Url.Content("/Students/Index?handler=ListStudents"))
    )
    .Columns(columns => {
        columns.Add()
            .DataField("ID")
            .Width(50);

        columns.Add()
            .DataField("LastName")
            .Width(250);

        columns.Add()
            .DataField("FirstMidName")
            .Width(250);

        columns.Add()
            .DataField("EnrollmentDate")
            .Width(250);
    })
)

<br/><br/><br/>

<div class="left-side">
    <div class="logo">
        <img src="https://js.devexpress.com/Demos/NetCore/images/DataGrid/logo-devav.png" />
        <img src="https://js.devexpress.com/Demos/NetCore/images/DataGrid/logo-tasks.png" />
    </div>
</div>
<div class="right-side">
    @{
        //var statuses = new[] { "All", "Not Started", "In Progress", "Need Assistance", "Deferred", "Completed" };
        //var statuses = Model.ListCourses.Select(x => ("Key: " + x.Key + ", Value: " + x.Value)).ToArray();
        var statuses = Model.ListCourses.ToArray();
    }
    @(Html.DevExtreme().SelectBox()
        .DataSource(statuses)
        .Value(statuses[0])
        .InputAttr("aria-label", "Status")
        .OnValueChanged(@<text>
            function(data) {
                var dataGrid = $("#gridStudents").dxDataGrid("instance");
                if (data.value == "All")
                    dataGrid.clearFilter();
                else
                    dataGrid.filter(["inscripto", "=", data.value]);
            }
        </text>)
        .DisplayExpr("Value")
        .ValueExpr("Key")
    )
</div>

@(Html.DevExtreme().DataGrid()
    .ID("gridStudents")
    @* .DataSource(ds => ds.StaticJson()
        .Url(Url.Content("/Students/Index?handler=ListStudentsDevExpress"))
    ) *@
    .DataSource(ds => ds.Mvc()
        .Controller("CoursesApi")
        .Key("ID")
        .LoadAction("GetListStudentsDevExpress")
    )
    .RemoteOperations(true)//para enviar la petición en cada interacción
    .RemoteOperations(true)//para enviar la petición en cada interacción
    .ColumnAutoWidth(true)
    .ShowBorders(true)
    .Columns(columns => {
        columns.Add()
            .DataField("ID")
            .Width(80);

        columns.Add()
            .Caption("Nombre")
            .DataField("LastName")
            .DataType(GridColumnDataType.Date);

        columns.Add()
            .Caption("Apellido")
            .DataField("FirstMidName")
            .CssClass("employee")
            .AllowSorting(false);

        columns.Add()
            .Caption("Fecha de inscripción")
            .DataField("EnrollmentDate")
            .Width(350);
    })
)

<br/><br/><br/>
<h2>Razor Page Handlers</h2>

<script>
    function grid_dataSource_beforeSend(op, ajax) {
        ajax.headers = {
            RequestVerificationToken: "@Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken"
        };
    }
</script>

@{
    var cursos = Model.ListStudents.ToArray();
}
@(Html.DevExtreme().SelectBox()
    .DataSource(cursos)
    .Value(cursos[0])
    .InputAttr("aria-label", "Status")
    .OnValueChanged(@<text>
        function(data) {
            var dataGrid = $("#gridRazorStudents").dxDataGrid("instance");
            if (data.value == "All")
                dataGrid.clearFilter();
            else
                dataGrid.filter(["ID", "=", data.value]);
        }
    </text>)
    .DisplayExpr("LastName")
    .ValueExpr("ID")
)

@(Html.DevExtreme().DataGrid<razor_pages_net6.Models.Student>()
    .ID("gridRazorStudents")
    .DataSource(ds => ds.RemoteController()
        .LoadUrl(Url.Page(null, "GridData")) // access to the GridData handler defined in the OnGetGridData method in the page model
        .UpdateUrl(Url.Page(null, "GridRow")) // access to the GridRow handler defined in the OnPutGridRow method in the page model
        .Key("ID")
        .OnBeforeSend("grid_dataSource_beforeSend") // passes an antiforgery token
    )
    .RemoteOperations(true)
    .Columns(columns => {
        columns.AddFor(m => m.ID);
        columns.AddFor(m => m.LastName);
        columns.AddFor(m => m.FirstMidName);
        columns.AddFor(m => m.EnrollmentDate);
    })
    .Editing(e => e
        .AllowUpdating(true)
        //.AllowAdding(true)
        //.AllowDeleting(true)
    )
)