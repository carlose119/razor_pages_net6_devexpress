@page
@model razor_pages_net6.Pages.Courses.IndexModel
@{
    ViewData["Title"] = "Courses page";
}

<div class="text-center">
    <h1 class="display-4">Courses</h1>
</div>


@(Html.DevExtreme().DataGrid()
    .ID("gridContainer")
    .ShowBorders(true)
    .DataSource(Model.ListCourses)
    .KeyExpr("CourseID")
    .Columns(c => {
        c.Add().DataField("CourseID");
        c.Add().DataField("Title");
        c.Add().DataField("Credits");
    })
)

@(Html.DevExtreme().DataGrid()
    .ShowBorders(true)
    .DataSource(ds => ds.StaticJson()
        .Url(Url.Content("/Courses/Index?handler=ListCourses"))
    )
    .Columns(columns => {
        columns.Add()
            .DataField("CourseID")
            .Width(50);

        columns.Add()
            .DataField("Title")
            .Width(250);

        columns.Add()
            .DataField("Credits")
            .Width(250);
    })
)

@(Html.DevExtreme().DataGrid()
    .DataSource(ds => ds.Mvc()
        .Controller("CoursesApi")
        .Key("CourseID")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
    )
    //.RemoteOperations(true)//para enviar la petición en cada interacción
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
    .Width("100%")
    .Height(600)
    .ShowBorders(true)
    .MasterDetail(md => md
        .Enabled(true)
        .Template(@<text>

            @(Html.DevExtreme().DataGrid()
                .DataSource(d => d.Mvc()
                    .Controller("CoursesApi")
                    .LoadAction("EnrollmentsDetails")
                    .LoadParams(new { CourseID = new JS("data.CourseID") })
                )
                .ShowBorders(true)
            )

        </text>)
    )
    .Editing(e => e.AllowAdding(true).AllowDeleting(true).AllowUpdating(true))
    .Grouping(g => g.AutoExpandAll(false))
)

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
<script>
    function beforeSend(operation, ajaxSettings) {
        ajaxSettings.headers = {
            RequestVerificationToken: "@Xsrf.GetAndStoreTokens(Model.HttpContext).RequestToken"
        };
    }
</script>













<div id="data-grid-demo">
    @(Html.DevExtreme().DataGrid<razor_pages_net6.Models.Course>()
        .ID("gridContainer2")
        .ShowBorders(true)
        .Paging(p => p.Enabled(false))
        .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .AllowAdding(true)
            .AllowDeleting(true)
            .Popup(p => p
                .Title("Course Info")
                .ShowTitle(true)
                .Width(700)
                .Height(525)
            )
            .Form(f => f.Items(items => {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems => {
                        @* groupItems.AddSimpleFor(m => m.CourseID); *@
                        groupItems.AddSimpleFor(m => m.Title);
                        groupItems.AddSimpleFor(m => m.Credits);

                        @* groupItems.AddSimpleFor(m => m.Notes)
                            .ColSpan(2)
                            .Editor(editor => editor.TextArea().Height(100)); *@
                    });

                @* items.AddGroup()
                    .Caption("Home Address")
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems => {
                        groupItems.AddSimpleFor(m => m.CourseID);
                        groupItems.AddSimpleFor(m => m.Title);
                        groupItems.AddSimpleFor(m => m.Credits);
                    }); *@
            }))
        )
        .Columns(columns => {
            columns.AddFor(m => m.CourseID)
                .Width(70)
                .Lookup(lookup => lookup
                    .DataSource(d => d.Mvc().Controller("CoursesApi").LoadAction("Get").Key("CourseID"))
                    .DisplayExpr("Title")
                    .ValueExpr("CourseID")
                );

            columns.AddFor(m => m.Title);

            columns.AddFor(m => m.Credits);
        })
        .DataSource(d => d.Mvc()
            .Controller("CoursesApi")
            .LoadAction("Get")
            .UpdateAction("Put")
            .InsertAction("Post")
            .DeleteAction("Delete")
            .Key("CourseID")
        )
    )
</div>
